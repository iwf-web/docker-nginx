upstream phpfcgi {
  server ${UPSTREAM_SERVER};
}

include /data/conf/nginx/http-partials.d/*.conf;

server {
  listen 80;
  #server_name domain.tld www.domain.tld;
  root /app/web;

  charset utf-8;

  include /data/conf/nginx/ssl/ssl.conf;
  include /data/conf/nginx/security-headers.d/*.conf;
  include /data/conf/nginx/server-partials.d/*.conf;

  gzip  on;
  gzip_vary on;
  gzip_min_length 10240;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css text/xml text/javascript application/javascript application/x-javascript application/xml;
  gzip_disable "MSIE [1-6]\.";

  location / {
    # try to serve file directly, fallback to app.php
    try_files $uri /app.php$is_args$args;
  }

  # DEV
  # This rule should only be placed on your development environment
  # In production, don't include this and don't deploy app_dev.php or config.php
  location ~ ^/(app_dev|opcache|config)\.php(/|$) {
    #fastcgi_pass unix:/var/run/php5-fpm.sock;
    fastcgi_pass phpfcgi;
    fastcgi_split_path_info ^(.+\.php)(/.*)$;
    include /etc/nginx/fastcgi_params;
    # When you are using symlinks to link the document root to the
    # current version of your application, you should pass the real
    # application path instead of the path to the symlink to PHP
    # FPM.
    # Otherwise, PHP's OPcache may not properly detect changes to
    # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
    # for more information).
    #fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    fastcgi_param  SCRIPT_FILENAME /app/web/$fastcgi_script_name;
    #fastcgi_param DOCUMENT_ROOT $realpath_root;
  }

  # PROD
  location ~ ^/app\.php(/|$) {
    #fastcgi_pass unix:/var/run/php5-fpm.sock;
    fastcgi_pass phpfcgi;
    fastcgi_split_path_info ^(.+\.php)(/.*)$;
    include /etc/nginx/fastcgi_params;
    # When you are using symlinks to link the document root to the
    # current version of your application, you should pass the real
    # application path instead of the path to the symlink to PHP
    # FPM.
    # Otherwise, PHP's OPcache may not properly detect changes to
    # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
    # for more information).
    #fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    fastcgi_param  SCRIPT_FILENAME /app/web/$fastcgi_script_name;
    #fastcgi_param DOCUMENT_ROOT $realpath_root;
    # Prevents URIs that include the front controller. This will 404:
    # http://domain.tld/app.php/some-path
    # Remove the internal directive to allow URIs like this
    internal;
  }

  location ~* \.(png|jpg|jpeg|gif|ico|woff|woff2)$ {
    expires 1h;
    log_not_found off;
    add_header Pragma public;
    add_header Cache-Control "public";
    # need to include the headers here, too, because "server" level headers will not be added again if we use a "add_header" statement in the location block
    include /data/conf/nginx/security-headers.d/*.conf;
  }

  location ~* \.(js|css)$ {
    expires 1h;
    log_not_found off;
    gzip  on;
    gzip_min_length 1024; # one kb
    add_header Pragma public;
    add_header Cache-Control "public";
    # need to include the headers here, too, because "server" level headers will not be added again if we use a "add_header" statement in the location block
    include /data/conf/nginx/security-headers.d/*.conf;
  }

  # return 404 for all other php files not matching the front controller
  # this prevents access to other php files you don't want to be accessible.
  location ~ \.php$ {
    return 404;
  }
}
